<project name="MonitoringDataProvisionService" default="MonitoringDataProvisionService_jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<presetdef name="javac">
		<javac includeantruntime="false" />
	</presetdef>
	<property name="core.version" value="0.6.9" />

	<property name="src.main" location="java" />
	<property name="src.junit" location="junit" />

	<property name="tmp" location="tmp" />
	<property name="log" location="log" />
	<property name="service" location="service" />

	<property name="tmp.classes" location="${tmp}/classes" />
	<property name="tmp.junit" location="${tmp}/test" />

	<property name="junit.report" location="${tmp}/test_reports" />

	<property name="export" location="export" />
	<property name="export.doc" location="${export}/doc" />
	<property name="export.jars" location="${export}/jars" />

	<property name="lib" location="lib" />

	<path id="libraries">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<exclude name="junit-*.jar" />
		</fileset>
	</path>

	<property name="lib.junit" location="${lib}/junit-4.11.jar" />

	<!-- Ivy Installation (Tool to fetch Libraries) -->
	<property name="ivy.install.version" value="2.3.0" />
	<property name="ivy.jar.dir" value="${basedir}/etc/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
	<property name="ivy.settings.file" value="${ivy.jar.dir}/ivysettings.xml" />
	<property name="ivy.dep.file" value="${ivy.jar.dir}/ivy.xml" />
	<!-- Download Ivy from Web Site so that it can be used without any special Installation -->
	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}" />
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" skipexisting="true" />
	</target>
	<!-- Try to load Ivy here from local Ivy directory -->
	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="get_deps" depends="install-ivy" description="--> resolve dependencies">
		<ivy:settings>
			<credentials host="role.dbis.rwth-aachen.de:9911/archiva" realm="Repository internal" />
		</ivy:settings>
		<ivy:retrieve type="jar" />
	</target>

	<target name="init_general">
		<tstamp />
		<mkdir dir="${tmp}" />
		<mkdir dir="${log}" />
		<mkdir dir="${export}" />
	</target>

	<target name="init_compile" depends="init_general, get_deps">
		<mkdir dir="${tmp.classes}" />
		<mkdir dir="${tmp.junit}" />
	</target>

	<target name="init_jars" depends="init_general">
		<mkdir dir="${export.jars}" />
	</target>

	<target name="init_doc" depends="init_general">
		<mkdir dir="${export.doc}" />
	</target>

	<!-- compilation -->
	<target name="compile_main" depends="init_compile">
		<javac srcdir="${src.main}" destdir="${tmp.classes}" classpathref="libraries" debug="on" encoding="UTF-8" />
		<copy todir="${tmp.classes}">
			<fileset dir="${src.main}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="compile_junit" depends="init_compile">
		<javac srcdir="${src.junit}" destdir="${tmp.junit}" classpath="${tmp.classes}:${lib.junit}" classpathref="libraries" debug="on" encoding="UTF-8" />
		<copy todir="${tmp.junit}">
			<fileset dir="${src.junit}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="compile_all" depends="compile_main, compile_junit" />

	<target name="MonitoringDataProvisionService_jar" depends="compile_main">
		<property name="MonitoringDataProvisionService.version" value="0.1" />
		<jar jarfile="${export.jars}/i5.las2peer.services.mobsos.successModeling-${MonitoringDataProvisionService.version}.jar">
			<fileset dir="${tmp.classes}" includes="i5/las2peer/services/mobsos/successModeling/**" />
			<manifest>
				<attribute name="Library-Version" value="${MonitoringDataProvisionService.version}" />
				<attribute name="Library-SymbolicName" value="i5.las2peer.services.mobsos.successModeling" />
				<attribute name="Import-Library" value='db2jcc;version="0",db2jcc_license_cu;version="0",db2jcc;version="0",mysqlConnectorJava;version="5.1.16",Javaluator;version="1"' />

			</manifest>
		</jar>
		<!-- Add the same Jar to the Service Directory !-->
		<jar jarfile="${service}/i5.las2peer.services.mobsos.successModeling-${MonitoringDataProvisionService.version}.jar">
			<fileset dir="${tmp.classes}" includes="${service.path}/**" />
			<manifest>
				<attribute name="Library-Version" value="${MonitoringDataProvisionService.version}" />
				<attribute name="Library-SymbolicName" value="i5.las2peer.services.mobsos.successModeling" />
			</manifest>
		</jar>
		<!-- Copy to lib and service folder to enable working with L2PNodeLauncher!-->
		<jar jarfile="${lib}/i5.las2peer.services.mobsos.successModeling-${MonitoringDataProvisionService.version}.jar">
			<fileset dir="${tmp.classes}" includes="i5/las2peer/services/mobsos/successModeling/**" />
			<manifest>
				<attribute name="Library-Version" value="${MonitoringDataProvisionService.version}" />
				<attribute name="Library-SymbolicName" value="i5.las2peer.services.mobsos.successModeling" />
				<attribute name="Import-Library" value='db2jcc;version="0",db2jcc_license_cu;version="0",db2jcc;version="0",mysqlConnectorJava;version="5.1.16",Javaluator;version="1"' />

			</manifest>
		</jar>

	</target>

	<target name="java_doc" depends="init_doc">
		<javadoc destdir="${export.doc}" author="true" version="true" use="true" source="1.8" windowtitle="Monitoring Data Provision Service Documentation" failonerror="yes" encoding="utf8" classpath="${tmp.classes}" classpathref="libraries">
			<packageset dir="${src.main}" defaultexcludes="yes">
				<include name="i5/las2peer/**" />
			</packageset>
			<bottom>
				<![CDATA[<p class="bottom">Copyright &#169; 2013 by Peter de Lange, Aachen, Germany. All Rights Reserved.</p>]]></bottom>
	</javadoc>
</target>

<!--   JUNIT testing -->
<target name="junit" depends="junit_tests, junit_clean" />

<target name="init_junit" depends="init_general">
	<mkdir dir="${junit.report}" />
	<mkdir dir="log" />
</target>

<target name="junit_clean">
	<delete dir="${tmp.junit}" />
</target>

<target name="junit_tests" depends="init_junit, compile_all">
	<junit haltonerror="yes" haltonfailure="yes" printsummary="yes">
		<classpath>
			<pathelement path="${tmp.classes}" />
			<pathelement path="${tmp.junit}" />
			<pathelement path="${lib.junit}" />
			<path refid="libraries" />
		</classpath>
		<formatter type="plain" />
		<batchtest todir="${junit.report}">
			<fileset dir="${tmp.junit}">
				<include name="**/*Test.class" />
			</fileset>
		</batchtest>
	</junit>
</target>

<!-- general cleanup; don't run this if you want to see unit test results or logging data -->
<target name="clean">
	<delete dir="${tmp}" />
	<delete includeemptydirs="true">
		<fileset dir="${log}" includes="**/*" />
	</delete>
	<delete dir=".las2peer" />
</target>

<target name="all" depends="MonitoringDataProvisionService_jar, junit, java_doc, clean" />

</project>
